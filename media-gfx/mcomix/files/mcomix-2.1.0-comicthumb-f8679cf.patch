Reference: https://github.com/multiSnow/mcomix3/blob/f8679cf1b14104557ac7ad5135e603ddb8b379a5/mcomix/comicthumb.py

diff --git a/mime/comicthumb b/mime/comicthumb
index c30e208..7175af8 100755
--- a/mime/comicthumb
+++ b/mime/comicthumb
@@ -1,45 +1,76 @@
-#!/usr/bin/env python2
+#!/usr/bin/env python3
 
-"""comicthumb - Thumbnailer for comic book archives, bundled with MComix.
+'''comicthumb - Thumbnailer for comic book archives, bundled with MComix.
 
-comicthumb is dependent on the Python Imaging Library (PIL).
+comicthumb use same dependency with MComix.
 
 comicthumb was originally written by Christoph Wolk, this version was
-re-written from scratch for Comix 4 by Pontus Ekberg. 
+re-written from scratch for Comix 4 by Pontus Ekberg.
+'''
 
-Supported formats: ZIP, RAR and tar (.cbz, .cbr, .cbt)
+import argparse
+from os import getcwd
+from os.path import exists,join,normpath
+from urllib.parse import unquote
 
-Usage: comicthumb INFILE OUTFILE [SIZE]
-"""
+from gi import require_version
 
+require_version('GdkPixbuf', '2.0')
+
+CURDIR=getcwd()
+
+from mcomix import tools
+tools.nogui()
 from mcomix import thumbnail_tools
 from mcomix import portability
 
-import sys
-import urllib2
+THUMB_SIZE=128
+URL_PREFIX='file://'
 
-if __name__ == '__main__':
-    argv = portability.get_commandline_args()
+def abspath(path):
+    return normpath(join(CURDIR,path))
+
+def main():
+    parser=argparse.ArgumentParser(
+        prog='comicthumb',
+        description='Thumbnailer for comic book archives',
+        epilog='Supported formats: ZIP, RAR and tar (.cbz, .cbr, .cbt)',
+    )
+    parser.add_argument('infile',default=None,metavar='INFILE',
+                        help='input archive')
+    parser.add_argument('outfile',default=None,metavar='OUTFILE',
+                        help='output thumbnail')
+    parser.add_argument('size',nargs='?',default=THUMB_SIZE,metavar='SIZE',
+                        help='size of thumbnail (default: {})'.format(THUMB_SIZE))
+    ns=parser.parse_args()
+    in_path=abspath(ns.infile)
+    out_path=abspath(ns.outfile)
+    if in_path.startswith(URL_PREFIX):
+        in_path=unquote(in_path[len(URL_PREFIX):])
+    if not exists(in_path):
+        print('not exists:',ns.infile)
+        parser.print_usage()
+        return 1
     try:
-        in_path = argv[0]
-        out_path = argv[1]
-        if len(argv) == 3:
-            size = int(argv[2])
-        else:
-            size = 128
-    except:
-        print __doc__
-        sys.exit(1)
-
-    if in_path.startswith('file://'):
-        in_path = urllib2.unquote(in_path[7:])
+        size=int(ns.size)
+    except ValueError:
+        print('invalid SIZE:',ns.size)
+        parser.print_usage()
+        return 1
 
     thumbnailer = thumbnail_tools.Thumbnailer(force_recreation=True,
                                               archive_support=True,
                                               store_on_disk=False,
                                               size=(size, size))
     thumb = thumbnailer.thumbnail(in_path)
-    thumb.save(out_path, 'png')
+    if thumb:
+        thumb.savev(out_path, 'png', [], [])
+    else:
+        print('unsupported file:',in_path)
+        print('please see https://github.com/multiSnow/mcomix3/blob/gtk3/README.rst')
+        print('for supported format and required library/tool.')
+        return 1
 
-    sys.exit(0)
+if __name__ == '__main__':
+    exit(main())
 
