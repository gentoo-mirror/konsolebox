#!/bin/bash

set -f && shopt -s extglob || exit

function get_common_prefix {
	local a b i IFS=/
	a=($1) b=($2) i=0

	for (( ; i < ${#a[@]}; ++i )); do
		[[ ${a[i]} == "${b[i]}" ]] || break
	done

	__=${a[*]:0:i}
}

function get_common_prefix_multi {
	__=${1%/*}

	while shift; [[ ${1+.} ]]; do
		get_common_prefix "$__" "${1%/*}"
	done
}

function main {
	local commit_msg_file=$1 common_prefix content contents_changed=false files_to_commit \
			has_non_comment=false prefix= warning temp __

	readarray -t content < "${commit_msg_file}" || exit

	for __ in "${content[@]}"; do
		[[ $__ == "# ----"* ]] && break

		if [[ $__ != *([[:blank:]])'#'* && $__ == *[![:blank:]]* ]]; then
			has_non_comment=true
			break
		fi
	done

	readarray -t files_to_commit < <(git status --porcelain |
			awk '/^[AMD]/ { print substr($0, 4) }')

	get_common_prefix_multi "${files_to_commit[@]}"
	common_prefix=$__

	if [[ ${has_non_comment} == false ]]; then
		case ${common_prefix} in
		+([!/-])-+([!/-])|helpers/git-hooks)
			prefix=${common_prefix}
			;;
		+([!/-])-+([!/-])/*)
			prefix=${common_prefix##+([!/])/+([!/])}
			prefix=${common_prefix:0:${#common_prefix} - ${#prefix}}
			;;
		eclass|eclass/*)
			if [[ ${#files_to_commit[@]} -eq 1 ]]; then
				prefix=${files_to_commit#eclass/}
			else
				prefix=${common_prefix}
			fi
			;;
		esac

		if [[ ${prefix} ]]; then
			for (( i = 0; i < ${#content[@]}; ++i )); do
				if [[ $1 == *[![:blank:]]* ]]; then
					unset 'content[i]'
				else
					break
				fi
			done

			content=("${prefix%/}: " "" "${content[@]}")
			contents_changed=true
		fi
	fi

	readarray -t excluded < <(exec git status "${common_prefix:-.}" --porcelain |
			awk '/^[\? ]/ { print $2 }')

	if [[ ${#excluded[@]} -gt 0 ]]; then
		warning=(
			"# WARNING: The following files are untracked or not being committed:"
			"# "
		)

		for __ in "${excluded[@]}"; do
			warning+=("# $__")
		done

		warning+=("")

		for (( i = 0; i < ${#content[@]}; ++i )); do
			if [[ ${content[i]} == '#'* ]]; then
				content=("${content[@]:0:i}" "${warning[@]}" "${content[@]:i}")
				warning=()
				break
			fi
		done

		[[ ${#warning[@]} -gt 0 ]] && content+=("${warning[@]}")
		contents_changed=true
	fi

	for (( i = 0; i < ${#content[@]}; ++i )); do
		if [[ ${content[i]} == '#'* ]]; then
			if [[ i -lt 2 ]]; then
				temp=("${content[@]:0:i}" "" "")
				content=("${temp[@]:0:2}" "${content[@]:i}")
				contents_changed=true
			fi

			break
		fi
	done

	[[ ${contents_changed} == false ]] || printf '%s\n' "${content[@]}" > "${commit_msg_file}"
}

main "$@"
